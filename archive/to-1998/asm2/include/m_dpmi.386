
; last updated: 03-04-97

.386P

Code    SEGMENT 'CODE' USE16 PUBLIC
ASSUME cs:Code

Msg2    db '->DPMI: available<-',13,10,'$'
Msg5    db '->DOS: Memory allocated<-',13,10,'$'
Msg3    db '->DPMI: Cannot switch mode<-',13,10,'$'
Msg4    db '->DOS: No memory for DPMI<-',13,10,'$'
Msg1    db '->DPMI: not available<-',13,10,'$'

DPMI_Bits dw 0
DPMI_Version dw 0
DPMI_processor db 0
DPMI_mem_allocd dw 0
DPMI_mem_seg dw 0
DPMI_pmode_addr dd 0

; test if DPMI available
DPMI_Test PROC NEAR
        ASSUME ds:Code
        mov  ax,Code
        mov  ds,ax

        mov  ax,1687h
        int  2Fh
        and  ax,ax
        jnz  NoDPMI
DPMIfnd:
        mov  DPMI_Bits,bx
        mov  DPMI_Version,dx
        mov  DPMI_Processor,cl
        mov  DPMI_mem_allocd,si
        mov  word ptr DPMI_pmode_addr[0],es
        mov  word ptr DPMI_pmode_addr[2],di
        ASSUME ds:Code
        mov  ax,Code
        mov  ds,ax
        mov  ah,09h
        mov  dx,offset Msg2
        int  21h
        ret
NoDPMI:
        ASSUME ds:Code
        mov  ax,Code
        mov  ds,ax
        mov  dx,offset Msg1
        mov  ah,09h
        int  21h
        mov  ax,4C00h
        int  21h
DPMI_Test ENDP

DPMI_malloc PROC NEAR
        ASSUME ds:Code
        mov  ax,Code
        mov  ds,ax

        mov  ax,5801h
        mov  bx,02h
        int  21h
        jc   alloc_failed

        mov  ah,48h
        mov  bx,dpmi_mem_allocd
        int  21h
        mov  dpmi_mem_seg,ax
        jc   alloc_failed
        mov  ah,09h
        mov  dx,offset Msg5
        int  21h
        ret
alloc_failed:
        mov  ah,09h
        mov  dx,offset Msg4
        int  21h
        mov  ax,4C00h
        int  21h
        ret
DPMI_malloc ENDP

; enter protected mode under DPMI
DPMI_PMode PROC NEAR
        ASSUME ds:Code
        mov  ax,Code
        mov  ds,ax

        mov  ax,DPMI_mem_seg
        mov  es,ax
        mov  ax,01h
        call dword ptr [DPMI_pmode_addr]
        jc   NoPMODE
        cli
        ret
NoPMODE:
        ASSUME ds:Code
        mov  ax,Code
        mov  ds,ax
        mov  dx,offset Msg3
        mov  ah,09h
        int  21h
        mov  ax,4C00h
        int  21h
DPMI_PMode ENDP

Code ENDS
