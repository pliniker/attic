#############################################################################
# Makefile for building: plugins
# Generated by qmake (1.07a) (Qt 3.3.4) on: Sat Jul 22 12:43:51 2006
# Project:  plugins.pro
# Template: subdirs
# Command: $(QMAKE) "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o Makefile plugins.pro
#############################################################################

MAKEFILE =	Makefile
QMAKE    =	qmake
DEL_FILE =    rm -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p
INSTALL_FILE= 
INSTALL_DIR = 
SUBTARGETS =	 \
		sub-test \
		sub-BaseTypes \
		sub-SynapticMap \
		sub-RandomInputLayer \
		sub-ImageInputLayer \
		sub-TestNeuralLayer \
		sub-StdNeuralLayer \
		sub-NullOutputLayer \
		sub-StdSynapticLayer \
		sub-LearnSynapticLayer \
		sub-StdSynapse \
		sub-InverseSynapse \
		sub-FVGRAM

first: all

all: Makefile $(SUBTARGETS)

test/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "test" || $(MKDIR) "test"
	cd test && $(QMAKE) test.pro "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o $(MAKEFILE)
sub-test: test/$(MAKEFILE) FORCE
	cd test && $(MAKE) -f $(MAKEFILE)

BaseTypes/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "BaseTypes" || $(MKDIR) "BaseTypes"
	cd BaseTypes && $(QMAKE) BaseTypes.pro "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o $(MAKEFILE)
sub-BaseTypes: BaseTypes/$(MAKEFILE) FORCE
	cd BaseTypes && $(MAKE) -f $(MAKEFILE)

SynapticMap/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "SynapticMap" || $(MKDIR) "SynapticMap"
	cd SynapticMap && $(QMAKE) SynapticMap.pro "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o $(MAKEFILE)
sub-SynapticMap: SynapticMap/$(MAKEFILE) FORCE
	cd SynapticMap && $(MAKE) -f $(MAKEFILE)

RandomInputLayer/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "RandomInputLayer" || $(MKDIR) "RandomInputLayer"
	cd RandomInputLayer && $(QMAKE) RandomInputLayer.pro "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o $(MAKEFILE)
sub-RandomInputLayer: RandomInputLayer/$(MAKEFILE) FORCE
	cd RandomInputLayer && $(MAKE) -f $(MAKEFILE)

ImageInputLayer/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "ImageInputLayer" || $(MKDIR) "ImageInputLayer"
	cd ImageInputLayer && $(QMAKE) ImageInputLayer.pro "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o $(MAKEFILE)
sub-ImageInputLayer: ImageInputLayer/$(MAKEFILE) FORCE
	cd ImageInputLayer && $(MAKE) -f $(MAKEFILE)

TestNeuralLayer/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "TestNeuralLayer" || $(MKDIR) "TestNeuralLayer"
	cd TestNeuralLayer && $(QMAKE) TestNeuralLayer.pro "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o $(MAKEFILE)
sub-TestNeuralLayer: TestNeuralLayer/$(MAKEFILE) FORCE
	cd TestNeuralLayer && $(MAKE) -f $(MAKEFILE)

StdNeuralLayer/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "StdNeuralLayer" || $(MKDIR) "StdNeuralLayer"
	cd StdNeuralLayer && $(QMAKE) StdNeuralLayer.pro "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o $(MAKEFILE)
sub-StdNeuralLayer: StdNeuralLayer/$(MAKEFILE) FORCE
	cd StdNeuralLayer && $(MAKE) -f $(MAKEFILE)

NullOutputLayer/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "NullOutputLayer" || $(MKDIR) "NullOutputLayer"
	cd NullOutputLayer && $(QMAKE) NullOutputLayer.pro "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o $(MAKEFILE)
sub-NullOutputLayer: NullOutputLayer/$(MAKEFILE) FORCE
	cd NullOutputLayer && $(MAKE) -f $(MAKEFILE)

StdSynapticLayer/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "StdSynapticLayer" || $(MKDIR) "StdSynapticLayer"
	cd StdSynapticLayer && $(QMAKE) StdSynapticLayer.pro "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o $(MAKEFILE)
sub-StdSynapticLayer: StdSynapticLayer/$(MAKEFILE) FORCE
	cd StdSynapticLayer && $(MAKE) -f $(MAKEFILE)

LearnSynapticLayer/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "LearnSynapticLayer" || $(MKDIR) "LearnSynapticLayer"
	cd LearnSynapticLayer && $(QMAKE) LearnSynapticLayer.pro "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o $(MAKEFILE)
sub-LearnSynapticLayer: LearnSynapticLayer/$(MAKEFILE) FORCE
	cd LearnSynapticLayer && $(MAKE) -f $(MAKEFILE)

StdSynapse/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "StdSynapse" || $(MKDIR) "StdSynapse"
	cd StdSynapse && $(QMAKE) StdSynapse.pro "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o $(MAKEFILE)
sub-StdSynapse: StdSynapse/$(MAKEFILE) FORCE
	cd StdSynapse && $(MAKE) -f $(MAKEFILE)

InverseSynapse/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "InverseSynapse" || $(MKDIR) "InverseSynapse"
	cd InverseSynapse && $(QMAKE) InverseSynapse.pro "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o $(MAKEFILE)
sub-InverseSynapse: InverseSynapse/$(MAKEFILE) FORCE
	cd InverseSynapse && $(MAKE) -f $(MAKEFILE)

FVGRAM/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "FVGRAM" || $(MKDIR) "FVGRAM"
	cd FVGRAM && $(QMAKE) FVGRAM.pro "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o $(MAKEFILE)
sub-FVGRAM: FVGRAM/$(MAKEFILE) FORCE
	cd FVGRAM && $(MAKE) -f $(MAKEFILE)

Makefile: plugins.pro  /opt/local/share/qt3/mkspecs/macx-g++/qmake.conf 
	$(QMAKE) "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o Makefile plugins.pro
qmake: qmake_all
	@$(QMAKE) "PREFIX=/Users/peter/src/phd/binary/" "CONFIG+=debug" -o Makefile plugins.pro

all: $(SUBTARGETS)
qmake_all: test/$(MAKEFILE) BaseTypes/$(MAKEFILE) SynapticMap/$(MAKEFILE) RandomInputLayer/$(MAKEFILE) ImageInputLayer/$(MAKEFILE) TestNeuralLayer/$(MAKEFILE) StdNeuralLayer/$(MAKEFILE) NullOutputLayer/$(MAKEFILE) StdSynapticLayer/$(MAKEFILE) LearnSynapticLayer/$(MAKEFILE) StdSynapse/$(MAKEFILE) InverseSynapse/$(MAKEFILE) FVGRAM/$(MAKEFILE)
	 ( [ -d test ] && cd test ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d BaseTypes ] && cd BaseTypes ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d SynapticMap ] && cd SynapticMap ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d RandomInputLayer ] && cd RandomInputLayer ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d ImageInputLayer ] && cd ImageInputLayer ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d TestNeuralLayer ] && cd TestNeuralLayer ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d StdNeuralLayer ] && cd StdNeuralLayer ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d NullOutputLayer ] && cd NullOutputLayer ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d StdSynapticLayer ] && cd StdSynapticLayer ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d LearnSynapticLayer ] && cd LearnSynapticLayer ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d StdSynapse ] && cd StdSynapse ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d InverseSynapse ] && cd InverseSynapse ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d FVGRAM ] && cd FVGRAM ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
clean uicables mocables uiclean mocclean lexclean yaccclean : qmake_all FORCE
	 ( [ -d test ] && cd test ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d BaseTypes ] && cd BaseTypes ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d SynapticMap ] && cd SynapticMap ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d RandomInputLayer ] && cd RandomInputLayer ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d ImageInputLayer ] && cd ImageInputLayer ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d TestNeuralLayer ] && cd TestNeuralLayer ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d StdNeuralLayer ] && cd StdNeuralLayer ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d NullOutputLayer ] && cd NullOutputLayer ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d StdSynapticLayer ] && cd StdSynapticLayer ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d LearnSynapticLayer ] && cd LearnSynapticLayer ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d StdSynapse ] && cd StdSynapse ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d InverseSynapse ] && cd InverseSynapse ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d FVGRAM ] && cd FVGRAM ; $(MAKE) -f $(MAKEFILE) $@; ) || true
uninstall_subdirs: qmake_all FORCE
	 ( [ -d test ] && cd test ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d BaseTypes ] && cd BaseTypes ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d SynapticMap ] && cd SynapticMap ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d RandomInputLayer ] && cd RandomInputLayer ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d ImageInputLayer ] && cd ImageInputLayer ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d TestNeuralLayer ] && cd TestNeuralLayer ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d StdNeuralLayer ] && cd StdNeuralLayer ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d NullOutputLayer ] && cd NullOutputLayer ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d StdSynapticLayer ] && cd StdSynapticLayer ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d LearnSynapticLayer ] && cd LearnSynapticLayer ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d StdSynapse ] && cd StdSynapse ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d InverseSynapse ] && cd InverseSynapse ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d FVGRAM ] && cd FVGRAM ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
install_subdirs: qmake_all FORCE
	 ( [ -d test ] && cd test ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d BaseTypes ] && cd BaseTypes ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d SynapticMap ] && cd SynapticMap ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d RandomInputLayer ] && cd RandomInputLayer ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d ImageInputLayer ] && cd ImageInputLayer ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d TestNeuralLayer ] && cd TestNeuralLayer ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d StdNeuralLayer ] && cd StdNeuralLayer ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d NullOutputLayer ] && cd NullOutputLayer ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d StdSynapticLayer ] && cd StdSynapticLayer ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d LearnSynapticLayer ] && cd LearnSynapticLayer ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d StdSynapse ] && cd StdSynapse ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d InverseSynapse ] && cd InverseSynapse ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d FVGRAM ] && cd FVGRAM ; $(MAKE) -f $(MAKEFILE) install; ) || true
distclean: qmake_all FORCE
	 ( [ -d test ] && cd test ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d BaseTypes ] && cd BaseTypes ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d SynapticMap ] && cd SynapticMap ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d RandomInputLayer ] && cd RandomInputLayer ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d ImageInputLayer ] && cd ImageInputLayer ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d TestNeuralLayer ] && cd TestNeuralLayer ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d StdNeuralLayer ] && cd StdNeuralLayer ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d NullOutputLayer ] && cd NullOutputLayer ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d StdSynapticLayer ] && cd StdSynapticLayer ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d LearnSynapticLayer ] && cd LearnSynapticLayer ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d StdSynapse ] && cd StdSynapse ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d InverseSynapse ] && cd InverseSynapse ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d FVGRAM ] && cd FVGRAM ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true

install:  install_subdirs

uninstall:  uninstall_subdirs

FORCE:

